

HI-TECH Software PICC Macro Assembler V9.60
                                                      Sun Jun 22 15:00:06 2014


     1                           	processor	16F76
     2                           	opt	pw 79
     3                           	psect	config,global,class=CONFIG,delta=2
     4                           	psect	text2,local,class=CODE,delta=2
     5                           	psect	text3,local,class=CODE,delta=2
     6                           	psect	text4,local,class=CODE,delta=2
     7                           	psect	text5,local,class=CODE,delta=2
     8                           	psect	text7,local,class=CODE,delta=2
     9                           	psect	text8,local,class=CODE,delta=2
    10                           	psect	text9,local,class=CODE,delta=2
    11                           	psect	text10,local,class=CODE,delta=2
    12                           	psect	text11,local,class=CODE,delta=2
    13                           	psect	text12,local,class=CODE,delta=2
    14                           	psect	text13,local,class=CODE,delta=2
    15                           	psect	text14,local,class=CODE,delta=2
    16                           	psect	text15,local,class=CODE,delta=2
    17                           	psect	text16,local,class=CODE,delta=2
    18                           	psect	rdata_0,global,class=BANK0,space=1,delta
      +                          =1
    19                           	psect	idata_0,global,class=CODE,delta=2
    20                           	psect	text18,local,class=CODE,delta=2
    21                           	psect	intcode,global,class=CODE,delta=2
    22                           	psect	intsave_0,global,ovrld,class=COMBANK,spa
      +                          ce=1,delta=1
    23                           	psect	intret,global,class=CODE,delta=2
    24                           	psect	intentry,global,class=CODE,delta=2
    25                           	psect	intsave,global,class=BANK0,space=1,delta
      +                          =1
    26                           	psect	text20,local,class=CODE,delta=2
    27                           	psect	rbss_0,global,class=BANK0,space=1,delta=
      +                          1
    28                           	psect	fpp__dummyFunction,global,ovrld,class=CO
      +                          NST,delta=2
    29                           	psect	fpp__getFunctions,global,ovrld,class=CON
      +                          ST,delta=2
    30                           	psect	fpp__setAdc,global,ovrld,class=CONST,del
      +                          ta=2
    31                           	psect	fpp__getAdc,global,ovrld,class=CONST,del
      +                          ta=2
    32                           	psect	fpp__setPwm,global,ovrld,class=CONST,del
      +                          ta=2
    33                           	psect	fpp__getPwm,global,ovrld,class=CONST,del
      +                          ta=2
    34                           	psect	fpp__setGpo,global,ovrld,class=CONST,del
      +                          ta=2
    35                           	psect	fpp__getGpi,global,ovrld,class=CONST,del
      +                          ta=2
    36                           	psect	temp,global,ovrld,class=BANK0,space=1,de
      +                          lta=1
    37  0000                     
    38  0000                     
    39  0000                     
    40  0000                     
    41  0000                     
    42  0000                     
    43  0000                     
    44  0000                     
    45  0000                     
    46  0000                     	;#
    47                           
    48                           	psect	config
    49  2007  3FBA               	dw	16314	;#
    50                           
    51                           	psect	text2
    52  028E                     _pwmSetup
    53                           ;system.c: 83: void pwmSetup(void){
    54  028E  0183               	clrf	3	;select bank 0
    55  028F  1112               	bcf	18,2
    56                           ;system.c: 85: PR2 = 255;
    57  0290  30FF               	movlw	-1
    58  0291  1683               	bsf	3,5
    59  0292  0092               	movwf	18	;volatile
    60                           ;system.c: 86: CCP1CON = 0x0C;
    61  0293  300C               	movlw	12
    62  0294  1283               	bcf	3,5
    63  0295  0097               	movwf	23	;volatile
    64                           ;system.c: 88: CCP2CON = 0x0C;
    65  0296  009D               	movwf	29	;volatile
    66                           ;system.c: 89: TRISC2 = 0;
    67  0297  1683               	bsf	3,5
    68  0298  1107               	bcf	7,2
    69                           ;system.c: 91: TRISC1 = 0;
    70  0299  1087               	bcf	7,1
    71                           ;system.c: 92: TMR2ON = 1;
    72  029A  1283               	bcf	3,5
    73  029B  1512               	bsf	18,2
    74                           ;system.c: 93: }
    75  029C  0008               	return	;W free
    76  029D                     _i2cSetup
    77                           ;system.c: 71: void i2cSetup(void){
    78  029D  303F               	movlw	63
    79  029E  1683               	bsf	3,5
    80  029F  1303               	bcf	3,6	;carry unused
    81  02A0  0594               	andwf	20	;volatile
    82                           ;system.c: 73: SSPCON = (1<<5)|0x06|(1<<4);
    83  02A1  3036               	movlw	54
    84  02A2  1283               	bcf	3,5
    85  02A3  0094               	movwf	20	;volatile
    86                           ;system.c: 74: SSPADD = (0x63<<1);
    87  02A4  30C6               	movlw	-58
    88  02A5  1683               	bsf	3,5
    89  02A6  0093               	movwf	19	;volatile
    90                           ;system.c: 76: SSPIE = 1;
    91  02A7  158C               	bsf	12,3
    92                           ;system.c: 77: PEIE = 1;
    93  02A8  170B               	bsf	11,6
    94                           ;system.c: 78: GIE = 1;
    95  02A9  178B               	bsf	11,7
    96                           ;system.c: 79: }
    97  02AA  1283               	bcf	3,5
    98  02AB  0008               	return	;W free
    99  02AC                     _systemInit
   100                           ;system.c: 57: void systemInit(void){
   101  02AC  30C1               	movlw	-63
   102  02AD  0183               	clrf	3	;select bank 0
   103  02AE  009F               	movwf	31	;volatile
   104                           ;system.c: 59: ADCON1 = 0x05;
   105  02AF  3005               	movlw	5
   106  02B0  1683               	bsf	3,5
   107  02B1  009F               	movwf	31	;volatile
   108                           ;system.c: 60: TRISA = 0b11111111;
   109  02B2  30FF               	movlw	-1
   110  02B3  0085               	movwf	5	;volatile
   111                           ;system.c: 61: TRISB = 0b11110000;
   112  02B4  30F0               	movlw	-16
   113  02B5  0086               	movwf	6	;volatile
   114                           ;system.c: 62: TRISC = 0b11111111;
   115  02B6  30FF               	movlw	-1
   116  02B7  0087               	movwf	7	;volatile
   117                           ;system.c: 63: PORTB = 255;
   118  02B8  1283               	bcf	3,5
   119  02B9  0086               	movwf	6	;volatile
   120                           ;system.c: 64: PORTA = 255;
   121  02BA  0085               	movwf	5	;volatile
   122                           ;system.c: 65: PORTC = 255;
   123  02BB  0087               	movwf	7	;volatile
   124                           ;system.c: 66: }
   125  02BC  0008               	return	;W free
   126  02BD                     _main
   127                           ;ctrlbd.c: 79: void main(void)
   128  02BD  22AC               	fcall	_systemInit
   129                           ;ctrlbd.c: 83: i2cSetup();
   130  02BE  229D               	fcall	_i2cSetup
   131                           ;ctrlbd.c: 84: i2cTransfer.status = IDLE;
   132  02BF  3004               	movlw	4
   133  02C0  00A5               	movwf	_i2cTransfer+2
   134                           ;ctrlbd.c: 85: pwmSetup();
   135  02C1  228E               	fcall	_pwmSetup
   136                           ;ctrlbd.c: 86: doFunc = functions[0];
   137  02C2  082D               	movf	_functions,w
   138  02C3  00A1               	movwf	_doFunc
   139  02C4  082E               	movf	_functions+1,w
   140  02C5  00A2               	movwf	_doFunc+1
   141                           ;ctrlbd.c: 88: while(1){
   142  02C6                     l81
   143  02C6  2AC6               	goto	l81
   144                           
   145                           	psect	text3
   146  036B                     _getFunctions
   147                           ;	_dst assigned to ?a_getFunctions+0
   148  0000                     _getFunctions$dst	set	?a_getFunctions
   149                           ;_dst stored from w
   150  036B  0183               	clrf	3	;select bank 0
   151  036C  00A7               	movwf	?a_getFunctions
   152                           ;system.c: 97: void getFunctions(int *dst){
   153  036D  0084               	movwf	4
   154  036E  1383               	bcf	3,7
   155  036F  305B               	movlw	91
   156  0370  0080               	movwf	0
   157  0371  0A84               	incf	4
   158  0372  0180               	clrf	0
   159                           ;system.c: 113: }
   160  0373  0008               	return	;W free
   161                           
   162                           	psect	text4
   163  02C7                     _setAdc
   164                           ;	_src assigned to ?a_setAdc+0
   165  0000                     _setAdc$src	set	?a_setAdc
   166                           ;	_ch assigned to ?a_setAdc+1
   167  0000                     _setAdc$ch	set	?a_setAdc+1
   168                           ;_src stored from w
   169  02C7  0183               	clrf	3	;select bank 0
   170  02C8  00A7               	movwf	?a_setAdc
   171                           ;system.c: 117: void setAdc(int *src){
   172  02C9  0084               	movwf	4
   173  02CA  1383               	bcf	3,7
   174  02CB  0800               	movf	0,w
   175  02CC  00F4               	movwf	btemp
   176  02CD  0A84               	incf	4
   177  02CE  0800               	movf	0,w
   178  02CF  00F5               	movwf	btemp+1
   179  02D0  300A               	movlw	10
   180  02D1  00F6               	movwf	btemp+2
   181  02D2                     u15
   182  02D2  0D75               	rlf	btemp+1,w
   183  02D3  0CF5               	rrf	btemp+1
   184  02D4  0CF4               	rrf	btemp
   185  02D5  0BF6               	decfsz	btemp+2
   186  02D6  2AD2               	goto	u15
   187  02D7  0874               	movf	btemp,w
   188  02D8  00A8               	movwf	?a_setAdc+1
   189                           ;system.c: 119: ch &= 3;
   190  02D9  3003               	movlw	3
   191  02DA  05A8               	andwf	?a_setAdc+1
   192                           ;system.c: 120: ADCON0 = 0xC1;
   193  02DB  30C1               	movlw	-63
   194  02DC  009F               	movwf	31	;volatile
   195                           ;system.c: 121: ADCON0 |= (ch<<3);
   196  02DD  0828               	movf	?a_setAdc+1,w
   197  02DE  00A9               	movwf	?a_setAdc+2
   198  02DF  1003               	bcf	3,0
   199  02E0  0DA9               	rlf	?a_setAdc+2
   200  02E1  1003               	bcf	3,0
   201  02E2  0DA9               	rlf	?a_setAdc+2
   202  02E3  1003               	bcf	3,0
   203  02E4  0D29               	rlf	?a_setAdc+2,w
   204  02E5  049F               	iorwf	31	;volatile
   205                           ;system.c: 122: }
   206  02E6  0008               	return	;W free
   207                           
   208                           	psect	text5
   209  0332                     _getAdc
   210                           ;	_dst assigned to ?a_getAdc+0
   211  0000                     _getAdc$dst	set	?a_getAdc
   212                           ;_dst stored from w
   213  0332  0183               	clrf	3	;select bank 0
   214  0333  00A7               	movwf	?a_getAdc
   215                           ;system.c: 124: void getAdc(int *dst){
   216  0334  151F               	bsf	31,2
   217                           ;system.c: 131: while(ADGO);
   218  0335                     l7
   219  0335  191F               	btfsc	31,2
   220  0336  2B35               	goto	l7
   221                           ;system.c: 132: *dst = ADRES;
   222  0337  081E               	movf	30,w	;volatile
   223  0338  00A8               	movwf	?a_getAdc+1
   224  0339  01A9               	clrf	?a_getAdc+2
   225  033A  0827               	movf	?a_getAdc,w
   226  033B  0084               	movwf	4
   227  033C  1383               	bcf	3,7
   228  033D  0828               	movf	?a_getAdc+1,w
   229  033E  0080               	movwf	0
   230  033F  0A84               	incf	4
   231  0340  0829               	movf	?a_getAdc+2,w
   232  0341  0080               	movwf	0
   233                           ;system.c: 134: }
   234  0342  0008               	return	;W free
   235                           
   236                           	psect	text7
   237  0396                     _getPwm
   238                           ;system.c: 146: void getPwm(int *src){
   239  0396  0183               	clrf	3	;select bank 0
   240  0397  0008               	return	;W free
   241                           
   242                           	psect	text8
   243  0343                     _getGpi
   244                           ;	_dst assigned to ?a_getGpi+0
   245  0000                     _getGpi$dst	set	?a_getGpi
   246                           ;_dst stored from w
   247  0343  0183               	clrf	3	;select bank 0
   248  0344  00A7               	movwf	?a_getGpi
   249                           ;system.c: 150: void getGpi(int *dst){
   250  0345  0806               	movf	6,w	;volatile
   251  0346  39F0               	andlw	-16
   252  0347  00A8               	movwf	?a_getGpi+1
   253  0348  01A9               	clrf	?a_getGpi+2
   254  0349  0827               	movf	?a_getGpi,w
   255  034A  0084               	movwf	4
   256  034B  1383               	bcf	3,7
   257  034C  0828               	movf	?a_getGpi+1,w
   258  034D  0080               	movwf	0
   259  034E  0A84               	incf	4
   260  034F  0829               	movf	?a_getGpi+2,w
   261  0350  0080               	movwf	0
   262                           ;system.c: 152: }
   263  0351  0008               	return	;W free
   264                           
   265                           	psect	text9
   266  0360                     _setGpo
   267                           ;	_src assigned to ?a_setGpo+0
   268  0000                     _setGpo$src	set	?a_setGpo
   269                           ;_src stored from w
   270  0360  0183               	clrf	3	;select bank 0
   271  0361  00A7               	movwf	?a_setGpo
   272                           ;system.c: 154: void setGpo(int *src){
   273  0362  30F0               	movlw	-16
   274  0363  0586               	andwf	6	;volatile
   275                           ;system.c: 156: PORTB |= *src & 0b00001111;
   276  0364  0827               	movf	?a_setGpo,w
   277  0365  0084               	movwf	4
   278  0366  1383               	bcf	3,7
   279  0367  0800               	movf	0,w
   280  0368  390F               	andlw	15
   281  0369  0486               	iorwf	6	;volatile
   282                           ;system.c: 157: }
   283  036A  0008               	return	;W free
   284                           
   285                           	psect	text10
   286  0394                     _dummyFunction
   287                           ;system.c: 159: void dummyFunction(int *dmy){
   288  0394  0183               	clrf	3	;select bank 0
   289  0395  0008               	return	;W free
   290                           
   291                           	psect	text11
   292  01EF                     _setFpwm
   293                           ;	_pres assigned to ?a_setFpwm+0
   294  0000                     _setFpwm$pres	set	?a_setFpwm
   295                           ;	_tmp assigned to ?a_setFpwm+1
   296  0000                     _setFpwm$tmp	set	?a_setFpwm+1
   297                           ;pwm.c: 6: void setFpwm(unsigned int fpwm)
   298  01EF  3010               	movlw	16
   299  01F0  0183               	clrf	3	;select bank 0
   300  01F1  00A6               	movwf	?a_setFpwm
   301                           ;pwm.c: 9: unsigned int tmp;
   302  01F2  1112               	bcf	18,2
   303                           ;pwm.c: 12: CCP1CON = 0x0C;
   304  01F3  300C               	movlw	12
   305  01F4  0097               	movwf	23	;volatile
   306                           ;pwm.c: 14: CCP2CON = 0x0C;
   307  01F5  009D               	movwf	29	;volatile
   308                           ;pwm.c: 17: while(pres){
   309  01F6  2A28               	goto	l16
   310  01F7                     l17
   311                           ;pwm.c: 18: tmp = 12000000/4UL/fpwm;
   312  01F7  0826               	movf	?_setFpwm,w
   313  01F8  00F8               	movwf	btemp+4
   314  01F9  0827               	movf	?_setFpwm+1,w
   315  01FA  00F9               	movwf	btemp+5
   316  01FB  01FA               	clrf	btemp+6
   317  01FC  01FB               	clrf	btemp+7
   318  01FD  30C0               	movlw	192
   319  01FE  00F4               	movwf	btemp
   320  01FF  30C6               	movlw	198
   321  0200  00F5               	movwf	btemp+1
   322  0201  302D               	movlw	45
   323  0202  00F6               	movwf	btemp+2
   324  0203  3000               	movlw	0
   325  0204  01F7               	clrf	btemp+3
   326  0205  120A  118A  20F4   	fcall	lldiv
   327  0208  0874               	movf	btemp,w
   328  0209  00A7               	movwf	?a_setFpwm+1
   329  020A  0875               	movf	btemp+1,w
   330  020B  00A8               	movwf	?a_setFpwm+2
   331                           ;pwm.c: 19: tmp /= pres;
   332  020C  0826               	movf	?a_setFpwm,w
   333  020D  00F6               	movwf	btemp+2
   334  020E  01F7               	clrf	btemp+3
   335  020F  0827               	movf	?a_setFpwm+1,w
   336  0210  00F4               	movwf	btemp
   337  0211  0828               	movf	?a_setFpwm+2,w
   338  0212  00F5               	movwf	btemp+1
   339  0213  120A  118A  21B5   	fcall	lwdiv
      +       120A  118A         
   340  0218  0878               	movf	btemp+4,w
   341  0219  00A7               	movwf	?a_setFpwm+1
   342  021A  0879               	movf	btemp+5,w
   343  021B  00A8               	movwf	?a_setFpwm+2
   344                           ;pwm.c: 20: PR2 = tmp-1;
   345  021C  0327               	decf	?a_setFpwm+1,w
   346  021D  1683               	bsf	3,5
   347  021E  0092               	movwf	18	;volatile
   348                           ;pwm.c: 21: if(PR2 > 0x40)
   349  021F  3041               	movlw	65
   350  0220  0212               	subwf	18,w	;volatile
   351  0221  1803               	btfsc	3,0
   352  0222  2A31               	goto	l21
   353                           ;pwm.c: 22: break;
   354                           ;pwm.c: 23: pres /= 4;
   355  0223  1003               	bcf	3,0
   356  0224  1283               	bcf	3,5
   357  0225  0CA6               	rrf	?a_setFpwm
   358  0226  1003               	bcf	3,0
   359  0227  0CA6               	rrf	?a_setFpwm
   360  0228                     l16
   361  0228  08A6               	movf	?a_setFpwm
   362  0229  1903               	btfsc	3,2
   363  022A  2A31               	goto	l21
   364  022B  29F7               	goto	l17
   365                           ;pwm.c: 24: }
   366                           ;pwm.c: 27: case 1 : T2CON = 0;break;
   367  022C                     l23
   368                           ;pwm.c: 28: case 4 : T2CON = 1;break;
   369  022C  3001               	movlw	1
   370  022D  2A2F               	goto	L1
   371  022E                     l24
   372                           ;pwm.c: 29: case 16: T2CON = 2;break;
   373  022E  3002               	movlw	2
   374  022F                     L1
   375  022F  0092               	movwf	18	;volatile
   376  0230  2A3D               	goto	l20
   377  0231                     l21
   378  0231  1283               	bcf	3,5
   379  0232  0826               	movf	?a_setFpwm,w
   380  0233  3A01               	xorlw	1
   381  0234  1903               	btfsc	3,2
   382  0235  2A3C               	goto	l25
   383  0236  3A05               	xorlw	5
   384  0237  1903               	btfsc	3,2
   385  0238  2A2C               	goto	l23
   386  0239  3A14               	xorlw	20
   387  023A  1903               	btfsc	3,2
   388  023B  2A2E               	goto	l24
   389  023C                     l25
   390                           ;pwm.c: 30: default: T2CON = 0;break;
   391  023C  0192               	clrf	18	;volatile
   392  023D                     l20
   393                           ;pwm.c: 36: TRISC2 = 0;
   394  023D  1683               	bsf	3,5
   395  023E  1107               	bcf	7,2
   396                           ;pwm.c: 37: TRISC1 = 0;
   397  023F  1087               	bcf	7,1
   398                           ;pwm.c: 40: TMR2ON = 1;
   399  0240  1283               	bcf	3,5
   400  0241  1512               	bsf	18,2
   401                           ;pwm.c: 41: }
   402  0242  0008               	return	;W free
   403                           
   404                           	psect	text12
   405  0243                     _setDuty
   406                           ;	_ch assigned to ?a_setDuty+0
   407  0000                     _setDuty$ch	set	?a_setDuty
   408                           ;	_tmp assigned to ?a_setDuty+1
   409  0000                     _setDuty$tmp	set	?a_setDuty+1
   410                           ;_ch stored from w
   411  0243  0183               	clrf	3	;select bank 0
   412  0244  00AB               	movwf	?a_setDuty
   413                           ;pwm.c: 57: void setDuty(char ch, int duty)
   414  0245  08AB               	movf	?a_setDuty
   415  0246  1D03               	btfss	3,2
   416  0247  2A5C               	goto	l27
   417                           ;pwm.c: 61: {
   418  0248  082A               	movf	?_setDuty+1,w
   419  0249  00F5               	movwf	btemp+1
   420  024A  0829               	movf	?_setDuty,w
   421  024B  00F4               	movwf	btemp
   422  024C  0D75               	rlf	btemp+1,w
   423  024D  0CF5               	rrf	btemp+1
   424  024E  0CF4               	rrf	btemp
   425  024F  0D75               	rlf	btemp+1,w
   426  0250  0CF5               	rrf	btemp+1
   427  0251  0CF4               	rrf	btemp
   428  0252  0874               	movf	btemp,w
   429  0253  0095               	movwf	21	;volatile
   430                           ;pwm.c: 63: tmp = duty & 3;
   431  0254  0829               	movf	?_setDuty,w
   432  0255  3903               	andlw	3
   433  0256  00AC               	movwf	?a_setDuty+1
   434                           ;pwm.c: 64: CCP1CON = (tmp<<4)|0x0C;
   435  0257  0E2C               	swapf	?a_setDuty+1,w
   436  0258  39F0               	andlw	240
   437  0259  380C               	iorlw	12
   438  025A  0097               	movwf	23	;volatile
   439                           ;pwm.c: 65: }
   440  025B  0008               	return
   441  025C                     l27
   442                           ;pwm.c: 66: else
   443  025C  082A               	movf	?_setDuty+1,w
   444  025D  00F5               	movwf	btemp+1
   445  025E  0829               	movf	?_setDuty,w
   446  025F  00F4               	movwf	btemp
   447  0260  0D75               	rlf	btemp+1,w
   448  0261  0CF5               	rrf	btemp+1
   449  0262  0CF4               	rrf	btemp
   450  0263  0D75               	rlf	btemp+1,w
   451  0264  0CF5               	rrf	btemp+1
   452  0265  0CF4               	rrf	btemp
   453  0266  0874               	movf	btemp,w
   454  0267  009B               	movwf	27	;volatile
   455                           ;pwm.c: 69: tmp = duty & 3;
   456  0268  0829               	movf	?_setDuty,w
   457  0269  3903               	andlw	3
   458  026A  00AC               	movwf	?a_setDuty+1
   459                           ;pwm.c: 70: CCP2CON = (tmp<<4)|0x0C;
   460  026B  0E2C               	swapf	?a_setDuty+1,w
   461  026C  39F0               	andlw	240
   462  026D  380C               	iorlw	12
   463  026E  009D               	movwf	29	;volatile
   464                           ;pwm.c: 71: }
   465  026F  0008               	return	;W free
   466  0270                     _setPwm
   467                           ;	_src assigned to ?a_setPwm+0
   468  0000                     _setPwm$src	set	?a_setPwm
   469                           ;	_ch assigned to ?a_setPwm+1
   470  0000                     _setPwm$ch	set	?a_setPwm+1
   471                           ;_src stored from w
   472  0270  0183               	clrf	3	;select bank 0
   473  0271  00A7               	movwf	?a_setPwm
   474                           ;system.c: 136: void setPwm(int *src){
   475  0272  0084               	movwf	4
   476  0273  1383               	bcf	3,7
   477  0274  0800               	movf	0,w
   478  0275  00F4               	movwf	btemp
   479  0276  0A84               	incf	4
   480  0277  0800               	movf	0,w
   481  0278  00F5               	movwf	btemp+1
   482  0279  300A               	movlw	10
   483  027A  00F6               	movwf	btemp+2
   484  027B                     u35
   485  027B  0D75               	rlf	btemp+1,w
   486  027C  0CF5               	rrf	btemp+1
   487  027D  0CF4               	rrf	btemp
   488  027E  0BF6               	decfsz	btemp+2
   489  027F  2A7B               	goto	u35
   490  0280  0874               	movf	btemp,w
   491  0281  00A8               	movwf	?a_setPwm+1
   492                           ;system.c: 141: ch &= 3;
   493  0282  3003               	movlw	3
   494  0283  05A8               	andwf	?a_setPwm+1
   495                           ;system.c: 142: setDuty(ch,*src);
   496  0284  0827               	movf	?a_setPwm,w
   497  0285  0084               	movwf	4
   498  0286  1383               	bcf	3,7
   499  0287  0800               	movf	0,w
   500  0288  00A9               	movwf	?_setDuty
   501  0289  0A84               	incf	4
   502  028A  0800               	movf	0,w
   503  028B  00AA               	movwf	?_setDuty+1
   504  028C  0828               	movf	?a_setPwm+1,w
   505  028D  2A43               	ljmp	_setDuty
   506                           
   507                           	psect	text13
   508  02E7                     _DelayBigUs
   509                           ;	_i assigned to ?a_DelayBigUs+0
   510  0000                     _DelayBigUs$i	set	?a_DelayBigUs
   511                           ;delay.c: 24: void DelayBigUs(unsigned int cnt)
   512  02E7  0183               	clrf	3	;select bank 0
   513  02E8  0827               	movf	?_DelayBigUs+1,w
   514  02E9  00A6               	movwf	?a_DelayBigUs
   515                           ;delay.c: 29: while(i>=1)
   516  02EA  2AF2               	goto	l35
   517  02EB                     l36
   518                           ;delay.c: 30: {
   519  02EB  03A6               	decf	?a_DelayBigUs
   520                           ;delay.c: 32: { delayus_variable=(unsigned char
      +                          )(253/3); asm("nop"); } asm("decfsz _delayus_va
      +                          riable,f"); asm("goto $ - 2");;
   521  02EC  3054               	movlw	84
   522  02ED  00A0               	movwf	_delayus_variable
   523  02EE  0000               	nop	;#
   524  02EF  0BA0               	decfsz	_delayus_variable	;#
   525  02F0  2AE5               	goto	($+-2)	;#
   526                           ;delay.c: 33: asm("clrwdt");
   527  02F1  0064               	clrwdt	;#
   528  02F2                     l35
   529  02F2  3001               	movlw	1
   530  02F3  0226               	subwf	?a_DelayBigUs,w
   531  02F4  1803               	btfsc	3,0
   532  02F5  2AEB               	goto	l36
   533                           ;delay.c: 34: }
   534  02F6  3003               	movlw	3
   535  02F7  00F5               	movwf	btemp+1
   536  02F8  0826               	movf	?_DelayBigUs,w
   537  02F9  120A  118A  217F   	fcall	lbdiv
      +       120A  118A         
   538  02FE  00A0               	movwf	_delayus_variable
   539  02FF  0000               	nop	;#
   540  0300  0BA0               	decfsz	_delayus_variable	;#
   541  0301  2AE5               	goto	($+-2)	;#
   542                           ;delay.c: 36: }
   543  0302  0008               	return	;W free
   544                           
   545                           	psect	text14
   546  0303                     _DelayMs
   547                           ;	_cnt assigned to ?a_DelayMs+0
   548  0000                     _DelayMs$cnt	set	?a_DelayMs
   549                           ;	_i assigned to ?a_DelayMs+1
   550  0000                     _DelayMs$i	set	?a_DelayMs+1
   551                           ;_cnt stored from w
   552  0303  0183               	clrf	3	;select bank 0
   553  0304  00A6               	movwf	?a_DelayMs
   554  0305                     l41
   555                           ;delay.c: 38: void DelayMs(unsigned char cnt)
   556                           ;delay.c: 42: i = 4;
   557  0305  3004               	movlw	4
   558  0306  00A7               	movwf	?a_DelayMs+1
   559  0307                     l44
   560                           ;delay.c: 43: do {
   561                           ;delay.c: 44: { delayus_variable=(unsigned char
      +                          )(250/3); asm("nop"); } asm("decfsz _delayus_va
      +                          riable,f"); asm("goto $ - 2");;
   562  0307  3053               	movlw	83
   563  0308  00A0               	movwf	_delayus_variable
   564  0309  0000               	nop	;#
   565  030A  0BA0               	decfsz	_delayus_variable	;#
   566  030B  2B01               	goto	($+-2)	;#
   567                           ;delay.c: 45: asm("clrwdt");
   568  030C  0064               	clrwdt	;#
   569                           ;delay.c: 46: } while(--i);
   570  030D  0BA7               	decfsz	?a_DelayMs+1
   571  030E  2B07               	goto	l44
   572                           ;delay.c: 47: } while(--cnt);
   573  030F  0BA6               	decfsz	?a_DelayMs
   574  0310  2B05               	goto	l41
   575  0311  0008               	return
   576  0312                     _DelayS
   577                           ;	_cnt assigned to ?a_DelayS+0
   578  0000                     _DelayS$cnt	set	?a_DelayS
   579                           ;	_i assigned to ?a_DelayS+1
   580  0000                     _DelayS$i	set	?a_DelayS+1
   581                           ;_cnt stored from w
   582  0312  0183               	clrf	3	;select bank 0
   583  0313  00A6               	movwf	?a_DelayS
   584  0314                     l62
   585                           ;delay.c: 74: void DelayS(unsigned char cnt)
   586                           ;delay.c: 78: i = 4;
   587  0314  3004               	movlw	4
   588  0315  00A7               	movwf	?a_DelayS+1
   589  0316                     l65
   590                           ;delay.c: 79: do {
   591                           ;delay.c: 80: DelayMs(250);
   592  0316  30FA               	movlw	-6
   593  0317  2303               	fcall	_DelayMs
   594                           ;delay.c: 81: asm("clrwdt");
   595  0318  0064               	clrwdt	;#
   596                           ;delay.c: 82: } while(--i);
   597  0319  0BA7               	decfsz	?a_DelayS+1
   598  031A  2B16               	goto	l65
   599                           ;delay.c: 83: } while(--cnt);
   600  031B  0BA6               	decfsz	?a_DelayS
   601  031C  2B14               	goto	l62
   602  031D  0008               	return
   603                           
   604                           	psect	text15
   605  0352                     _DelayMs_interrupt
   606                           ;	_cnt assigned to ?a_DelayMs_interrupt+0
   607  0000                     _DelayMs_interrupt$cnt	set	?a_DelayMs_interrupt
   608                           ;	_i assigned to ?a_DelayMs_interrupt+1
   609  0000                     _DelayMs_interrupt$i	set	?a_DelayMs_interrupt+1
   610                           ;_cnt stored from w
   611  0352  0183               	clrf	3	;select bank 0
   612  0353  00A6               	movwf	?a_DelayMs_interrupt
   613  0354                     l48
   614                           ;delay.c: 51: void DelayMs_interrupt(unsigned c
      +                          har cnt)
   615                           ;delay.c: 55: i = 4;
   616  0354  3004               	movlw	4
   617  0355  00A7               	movwf	?a_DelayMs_interrupt+1
   618  0356                     l51
   619                           ;delay.c: 56: do {
   620                           ;delay.c: 57: { delayus_variable=(unsigned char
      +                          )(250/3); asm("nop"); } asm("decfsz _delayus_va
      +                          riable,f"); asm("goto $ - 2");;
   621  0356  3053               	movlw	83
   622  0357  00A0               	movwf	_delayus_variable
   623  0358  0000               	nop	;#
   624  0359  0BA0               	decfsz	_delayus_variable	;#
   625  035A  2B50               	goto	($+-2)	;#
   626                           ;delay.c: 58: } while(--i);
   627  035B  0BA7               	decfsz	?a_DelayMs_interrupt+1
   628  035C  2B56               	goto	l51
   629                           ;delay.c: 59: } while(--cnt);
   630  035D  0BA6               	decfsz	?a_DelayMs_interrupt
   631  035E  2B54               	goto	l48
   632  035F  0008               	return
   633                           
   634                           	psect	text16
   635  031E                     _DelayBigMs
   636                           ;	_i assigned to ?a_DelayBigMs+0
   637  0000                     _DelayBigMs$i	set	?a_DelayBigMs
   638  031E                     l55
   639                           ;delay.c: 62: void DelayBigMs(unsigned int cnt)
   640                           ;delay.c: 66: i = 4;
   641  031E  3004               	movlw	4
   642  031F  0183               	clrf	3	;select bank 0
   643  0320  00A6               	movwf	?a_DelayBigMs
   644  0321                     l58
   645                           ;delay.c: 67: do {
   646                           ;delay.c: 68: { delayus_variable=(unsigned char
      +                          )(250/3); asm("nop"); } asm("decfsz _delayus_va
      +                          riable,f"); asm("goto $ - 2");;
   647  0321  3053               	movlw	83
   648  0322  00A0               	movwf	_delayus_variable
   649  0323  0000               	nop	;#
   650  0324  0BA0               	decfsz	_delayus_variable	;#
   651  0325  2B1C               	goto	($+-2)	;#
   652                           ;delay.c: 69: asm("clrwdt");
   653  0326  0064               	clrwdt	;#
   654                           ;delay.c: 70: } while(--i);
   655  0327  0BA6               	decfsz	?a_DelayBigMs
   656  0328  2B21               	goto	l58
   657                           ;delay.c: 71: } while(--cnt);
   658  0329  30FF               	movlw	-1
   659  032A  07A6               	addwf	?_DelayBigMs
   660  032B  1C03               	btfss	3,0
   661  032C  03A7               	decf	?_DelayBigMs+1
   662  032D  0827               	movf	?_DelayBigMs+1,w
   663  032E  0426               	iorwf	?_DelayBigMs,w
   664  032F  1903               	btfsc	3,2
   665  0330  0008               	return
   666  0331  2B1E               	goto	l55
   667                           
   668                           	psect	rdata_0
   669  002D                     _functions
                     _functions
   670  002D                     	ds	2
                     	ds	2
   671  002F                     	ds	2
                     	ds	2
   672  0031                     	ds	2
                     	ds	2
   673  0033                     	ds	2
                     	ds	2
   674  0035                     	ds	2
                     	ds	2
   675  0037                     	ds	2
                     	ds	2
   676  0039                     	ds	2
                     	ds	2
   677  003B                     	ds	2
   678                           
   679                           	psect	idata_0
   680  00E4  3480               	retlw	low fpl__dummyFunction
   681  00E5  3403               	retlw	high fpl__dummyFunction
   682  00E6  3484               	retlw	low fpl__getFunctions
   683  00E7  3403               	retlw	high fpl__getFunctions
   684  00E8  3490               	retlw	low fpl__setAdc
   685  00E9  3403               	retlw	high fpl__setAdc
   686  00EA  348C               	retlw	low fpl__getAdc
   687  00EB  3403               	retlw	high fpl__getAdc
   688  00EC  347C               	retlw	low fpl__setPwm
   689  00ED  3403               	retlw	high fpl__setPwm
   690  00EE  3488               	retlw	low fpl__getPwm
   691  00EF  3403               	retlw	high fpl__getPwm
   692  00F0  3474               	retlw	low fpl__setGpo
   693  00F1  3403               	retlw	high fpl__setGpo
   694  00F2  3478               	retlw	low fpl__getGpi
   695  00F3  3403               	retlw	high fpl__getGpi
   696                           
   697                           	psect	intcode
   698  002B                     _handler
   699  002B                     int_func
   700                           ;ctrlbd.c: 33: void interrupt handler(void){
   701  002B  0183               	clrf	3	;select bank 0
   702  002C  1D8C               	btfss	12,3
   703  002D  2883               	goto	l67
   704                           ;ctrlbd.c: 36: if(!DA){
   705  002E  1683               	bsf	3,5
   706  002F  1A94               	btfsc	20,5
   707  0030  286B               	goto	l74
   708                           ;ctrlbd.c: 37: if(RW){
   709  0031  1D14               	btfss	20,2
   710  0032  2843               	goto	l70
   711                           ;ctrlbd.c: 38: doFunc((int*)&i2cTransfer.datal)
      +                          ;
   712  0033  3023               	movlw	_i2cTransfer
   713  0034  00F4               	movwf	btemp
   714  0035  1283               	bcf	3,5
   715  0036  0822               	movf	_doFunc+1,w
   716  0037  00C1               	movwf	code_ptr+1
   717  0038  0821               	movf	_doFunc,w
   718  0039  120A  118A  20CE   	fcall	string_table
      +       120A  118A         
   719                           ;ctrlbd.c: 39: SSPBUF = i2cTransfer.datah;
   720  003E  0824               	movf	_i2cTransfer+1,w
   721  003F  0093               	movwf	19	;volatile
   722                           ;ctrlbd.c: 40: SSPCON |= (1<<4);
   723  0040  1614               	bsf	20,4	;volatile
   724                           ;ctrlbd.c: 41: i2cTransfer.status = READ_DATA_L
      +                          ;
   725  0041  3003               	movlw	3
   726  0042  2877               	goto	L3
   727                           ;ctrlbd.c: 42: }else{
   728  0043                     l70
   729                           ;ctrlbd.c: 43: i2cTransfer.status = SSPBUF;
   730  0043  1283               	bcf	3,5
   731  0044  0813               	movf	19,w	;volatile
   732  0045  00A5               	movwf	_i2cTransfer+2
   733                           ;ctrlbd.c: 44: i2cTransfer.status = WRITE_DATA_
      +                          H;
   734  0046  01A5               	clrf	_i2cTransfer+2
   735                           ;ctrlbd.c: 45: }
   736  0047  2878               	goto	l72
   737                           ;ctrlbd.c: 47: switch(i2cTransfer.status){
   738  0048                     l75
   739                           ;ctrlbd.c: 48: case WRITE_DATA_H:
   740                           ;ctrlbd.c: 49: i2cTransfer.datah = SSPBUF;
   741  0048  0813               	movf	19,w	;volatile
   742  0049  00A4               	movwf	_i2cTransfer+1
   743                           ;ctrlbd.c: 50: i2cTransfer.status = WRITE_DATA_
      +                          L;
   744  004A  3002               	movlw	2
   745  004B  2877               	goto	L3
   746                           ;ctrlbd.c: 51: break;
   747  004C                     l76
   748                           ;ctrlbd.c: 52: case WRITE_DATA_L:
   749                           ;ctrlbd.c: 53: i2cTransfer.datal = SSPBUF;
   750  004C  0813               	movf	19,w	;volatile
   751  004D  00A3               	movwf	_i2cTransfer
   752                           ;ctrlbd.c: 54: doFunc = functions[i2cTransfer.d
      +                          atah >> 4];
   753  004E  0E24               	swapf	_i2cTransfer+1,w
   754  004F  390F               	andlw	15
   755  0050  00A6               	movwf	?a_handler
   756  0051  0726               	addwf	?a_handler,w
   757  0052  3E2D               	addlw	_functions
   758  0053  0084               	movwf	4
   759  0054  1383               	bcf	3,7
   760  0055  0800               	movf	0,w
   761  0056  00A1               	movwf	_doFunc
   762  0057  0A84               	incf	4
   763  0058  0800               	movf	0,w
   764  0059  00A2               	movwf	_doFunc+1
   765                           ;ctrlbd.c: 55: i2cTransfer.status = IDLE;
   766  005A  3004               	movlw	4
   767  005B  00A5               	movwf	_i2cTransfer+2
   768                           ;ctrlbd.c: 56: doFunc((int*)&i2cTransfer.datal)
      +                          ;
   769  005C  3023               	movlw	_i2cTransfer
   770  005D  00F4               	movwf	btemp
   771  005E  0822               	movf	_doFunc+1,w
   772  005F  00C1               	movwf	code_ptr+1
   773  0060  0821               	movf	_doFunc,w
   774  0061  120A  118A  20CE   	fcall	string_table
      +       120A  118A         
   775                           ;ctrlbd.c: 57: break;
   776  0066  2878               	goto	l72
   777  0067                     l77
   778                           ;ctrlbd.c: 58: case READ_DATA_L:
   779                           ;ctrlbd.c: 59: SSPBUF = i2cTransfer.datal;
   780  0067  0823               	movf	_i2cTransfer,w
   781  0068  0093               	movwf	19	;volatile
   782                           ;ctrlbd.c: 60: SSPCON |= (1<<4);
   783  0069  1614               	bsf	20,4	;volatile
   784  006A  2876               	goto	l78
   785                           ;ctrlbd.c: 61: i2cTransfer.status = IDLE;
   786                           ;ctrlbd.c: 65: }
   787  006B                     l74
   788  006B  1283               	bcf	3,5
   789  006C  0825               	movf	_i2cTransfer+2,w
   790  006D  3A00               	xorlw	0
   791  006E  1903               	btfsc	3,2
   792  006F  2848               	goto	l75
   793  0070  3A02               	xorlw	2
   794  0071  1903               	btfsc	3,2
   795  0072  284C               	goto	l76
   796  0073  3A01               	xorlw	1
   797  0074  1903               	btfsc	3,2
   798  0075  2867               	goto	l77
   799                           ;ctrlbd.c: 62: break;
   800  0076                     l78
   801                           ;ctrlbd.c: 63: default:
   802                           ;ctrlbd.c: 64: i2cTransfer.status = IDLE;
   803  0076  3004               	movlw	4
   804  0077                     L3
   805  0077  00A5               	movwf	_i2cTransfer+2
   806  0078                     l72
   807                           ;ctrlbd.c: 66: }
   808  0078  1B94               	btfsc	20,7
   809  0079  287C               	goto	u210
   810  007A  1F14               	btfss	20,6
   811  007B  2882               	goto	l79
   812  007C                     u210
   813                           ;ctrlbd.c: 68: WCOL = 0;
   814  007C  1394               	bcf	20,7
   815                           ;ctrlbd.c: 69: SSPOV = 0;
   816  007D  1314               	bcf	20,6
   817                           ;ctrlbd.c: 70: i2cTransfer.status = SSPBUF;
   818  007E  0813               	movf	19,w	;volatile
   819  007F  00A5               	movwf	_i2cTransfer+2
   820                           ;ctrlbd.c: 71: i2cTransfer.status = IDLE;
   821  0080  3004               	movlw	4
   822  0081  00A5               	movwf	_i2cTransfer+2
   823  0082                     l79
   824                           ;ctrlbd.c: 72: }
   825  0082  118C               	bcf	12,3
   826                           ;ctrlbd.c: 74: }
   827  0083                     l67
   828                           
   829                           	psect	intsave_0
   830  0073                     saved_w
                     saved_w
   831  0073                     	ds	1
   832                           
   833                           	psect	intret
   834  00A1  083E               	movf	saved_fsr,w
   835  00A2  0084               	movwf	4	;restore FSR
   836  00A3  083F               	movf	saved_pclath,w
   837  00A4  008A               	movwf	10
   838  00A5                     int_restore
   839  00A5  083D               	movf	saved_status,w
   840  00A6  0083               	movwf	3
   841  00A7  0EF3               	swapf	saved_w
   842  00A8  0E73               	swapf	saved_w,w
   843  00A9  0009               	retfie
   844                           
   845                           	psect	intentry
   846  0004                     int_entry
   847  0004  00F3               	movwf	saved_w
   848  0005  0803               	movf	3,w
   849  0006  0183               	clrf	3
   850  0007  00BD               	movwf	saved_status
   851  0008  0804               	movf	4,w
   852  0009  00BE               	movwf	saved_fsr
   853  000A  080A               	movf	10,w
   854  000B  00BF               	movwf	saved_pclath
   855  000C  018A               	clrf	10
   856  0000                     
   857                           
   858                           	psect	intsave
   859  003D                     saved_status
                     saved_status
   860  003D                     	ds	1
   861  003E                     saved_fsr
                     saved_fsr
   862  003E                     	ds	1
   863  003F                     saved_pclath
                     saved_pclath
   864  003F                     	ds	1
   865                           
   866                           	psect	text20
   867  0000                     
   868  0000                     
   869  0000                     
   870  0000                     
   871  0000                     
   872  0000                     
   873  0000                     
   874  0000                     
   875  0000                     
   876  0000                     
   877  0000                     
   878  0000                     
   879  0000                     
   880  0000                     
   881  0000                     
   882  0000                     
   883  0000                     
   884  0000                     
   885  0000                     
   886  0000                     
   887  0000                     
   888  0000                     
   889  0000                     
   890  0000                     
   891  0000                     
   892  0000                     
   893  0000                     
   894  0000                     
   895  0000                     
   896  0000                     
   897  0000                     
   898  0000                     
   899  0000                     
   900  0000                     
   901  0000                     
   902  0000                     
   903  0000                     
   904  0000                     
   905  0000                     
   906  0000                     
   907  0000                     
   908  0000                     
   909  0000                     
   910  0000                     
   911  0000                     
   912  0000                     
   913  0000                     
   914  0000                     
   915  0000                     
   916  0000                     
   917  0000                     
   918  0000                     
   919  0000                     
   920  0000                     
   921  0000                     
   922  0000                     
   923  0000                     
   924  0000                     
   925  0000                     
   926  0000                     
   927  0000                     
   928  0000                     
   929  0000                     
   930  0000                     
   931  0000                     
   932  0000                     
   933  0000                     
   934  0000                     
   935  0000                     
   936  0000                     
   937  0000                     
   938  0000                     
   939  0000                     
   940  0000                     
   941  0000                     
   942  0000                     
   943  0000                     
   944  0000                     
   945  0000                     
   946  0000                     
   947  0000                     
   948  0000                     
   949  0000                     
   950  0000                     
   951  0000                     
   952  0000                     
   953  0000                     
   954  0000                     
   955  0000                     
   956  0000                     
   957  0000                     
   958  0000                     
   959  0000                     
   960  0000                     
   961  0000                     
   962  0000                     
   963  0000                     
   964  0000                     
   965  0000                     
   966  0000                     
   967  0000                     
   968  0000                     
   969  0000                     
   970  0000                     
   971  0000                     
   972  0000                     
   973  0000                     
   974  0000                     
   975  0000                     
   976  0000                     
   977  0000                     
   978  0000                     
   979  0000                     
   980  0000                     
   981  0000                     
   982  0000                     
   983  0000                     
   984  0000                     
   985  0000                     
   986  0000                     
   987  0000                     
   988  0000                     
   989  0000                     
   990  0000                     
   991  0000                     
   992  0000                     
   993  0000                     
   994  0000                     
   995  0000                     
   996  0000                     
   997  0000                     
   998  0000                     
   999  0000                     
  1000  0000                     
  1001  0000                     
  1002  0000                     
  1003  0000                     
  1004  0000                     
  1005  0000                     
  1006  0000                     
  1007  0000                     
  1008  0000                     
  1009  0000                     
  1010  0000                     
  1011  0000                     
  1012  0000                     
  1013  0000                     
  1014  0000                     
  1015  0000                     
  1016  0000                     
  1017  0000                     
  1018  0000                     
  1019  0000                     
  1020  0000                     
  1021  0000                     
  1022  0000                     
  1023  0000                     
  1024  0000                     
  1025  0000                     
  1026  0000                     
  1027  0000                     
  1028  0000                     
  1029  0000                     
  1030  0000                     
  1031  0000                     
  1032  0000                     
  1033  0000                     
  1034  0000                     
  1035  0000                     
  1036  0000                     
  1037  0000                     
  1038  0000                     
  1039  0000                     
  1040  0000                     
  1041  0000                     
  1042  0000                     
  1043  0000                     
  1044  0000                     
  1045  0000                     
  1046  0000                     
  1047  0000                     
  1048  0000                     
  1049  0000                     
  1050  0000                     
  1051  0000                     
  1052  0000                     
  1053  0000                     
  1054  0000                     
  1055  0000                     
  1056  0000                     
  1057  0000                     
  1058  0000                     
  1059  0000                     
  1060  0000                     
  1061  0000                     
  1062  0000                     
  1063  0000                     
  1064  0000                     
  1065  0000                     
  1066  0000                     
  1067  0000                     
  1068                           
  1069                           	psect	rbss_0
  1070  0020                     _delayus_variable
                     _delayus_variable
  1071  0020                     	ds	1
  1072  0021                     _doFunc
                     _doFunc
  1073  0021                     	ds	2
  1074  0023                     _i2cTransfer
                     _i2cTransfer
  1075  0023                     	ds	3
  1076                           
  1077                           	psect	fpp__dummyFunction
  1078                           ;function pointer lookups
  1079  0380                     fpl__dummyFunction
  1080  0380  0874               	movf	btemp,w
  1081  0381  120A  118A  2B94   	ljmp	_dummyFunction
  1082                           
  1083                           	psect	fpp__getFunctions
  1084  0384                     fpl__getFunctions
  1085  0384  0874               	movf	btemp,w
  1086  0385  120A  118A  2B6B   	ljmp	_getFunctions
  1087                           
  1088                           	psect	fpp__setAdc
  1089  0390                     fpl__setAdc
  1090  0390  0874               	movf	btemp,w
  1091  0391  120A  118A  2AC7   	ljmp	_setAdc
  1092                           
  1093                           	psect	fpp__getAdc
  1094  038C                     fpl__getAdc
  1095  038C  0874               	movf	btemp,w
  1096  038D  120A  118A  2B32   	ljmp	_getAdc
  1097                           
  1098                           	psect	fpp__setPwm
  1099  037C                     fpl__setPwm
  1100  037C  0874               	movf	btemp,w
  1101  037D  120A  118A  2A70   	ljmp	_setPwm
  1102                           
  1103                           	psect	fpp__getPwm
  1104  0388                     fpl__getPwm
  1105  0388  0874               	movf	btemp,w
  1106  0389  120A  118A  2B96   	ljmp	_getPwm
  1107                           
  1108                           	psect	fpp__setGpo
  1109  0374                     fpl__setGpo
  1110  0374  0874               	movf	btemp,w
  1111  0375  120A  118A  2B60   	ljmp	_setGpo
  1112                           
  1113                           	psect	fpp__getGpi
  1114  0378                     fpl__getGpi
  1115  0378  0874               	movf	btemp,w
  1116  0379  120A  118A  2B43   	ljmp	_getGpi
  1117                           
  1118                           	psect	temp
  1119  0074                     btemp
                     btemp
  1120  0074                     	ds	8


HI-TECH Software PICC Macro Assembler V9.60
Symbol Table                                          Sun Jun 22 15:00:06 2014

            ?a_DelayMs 0026                      l7 0335  
    _DelayMs_interrupt 0352                     l20 023D  
                   l21 0231                     l23 022C  
                   l24 022E                     l16 0228  
                   l41 0305                     l25 023C  
                   l17 01F7                     l51 0356  
                   l35 02F2                     l27 025C  
                   l44 0307                     l36 02EB  
                   l70 0043                     l62 0314  
                   l55 031E                     l72 0078  
                   l48 0354                     l81 02C6  
                   l65 0316                     l74 006B  
                   l58 0321                     l67 0083  
                   l75 0048                     l76 004C  
                   l77 0067                     l78 0076  
                   l79 0082                     u15 02D2  
                   u35 027B           ?a_DelayBigMs 0026  
         ?a_DelayBigUs 0026                     fsr 0004  
             ?a_getAdc 0027               ?a_getGpi 0027  
                  u210 007C               ?a_setAdc 0027  
             ?a_setGpo 0027                 _DelayS 0312  
             ?a_setPwm 0027               ?_setFpwm 0026  
             ?_setDuty 0029           save_code_ptr 0027  
            ?a_handler 0026       fpl__getFunctions 0384  
                 f2113 0028                   f2063 0029  
                 f2073 0028                   f2253 0026  
               _doFunc 0021                 _getAdc 0332  
               _getGpi 0343                 _getPwm 0396  
             _pwmSetup 028E                 _setAdc 02C7  
               _setGpo 0360                 _setPwm 0270  
              _DelayMs 0303             save_btemp0 000D  
           save_btemp1 0015              ?a_setFpwm 0026  
           save_btemp2 0017             save_btemp3 0019  
           save_btemp4 001B             save_btemp5 001D  
           save_btemp6 001F             save_btemp7 0021  
           save_btemp8 0023             save_btemp9 0025  
            ?a_setDuty 002B                   _main 02BD  
                 btemp 0074            ?_DelayBigMs 0026  
                 lbdiv 017F            ?_DelayBigUs 0026  
                 lldiv 00F4              _functions 002D  
                 lwdiv 01B5                   start 00AA  
               saved_w 0073             fpl__getAdc 038C  
           fpl__getGpi 0378             fpl__getPwm 0388  
           _DelayBigMs 031E             fpl__setAdc 0390  
           _DelayBigUs 02E7             fpl__setGpo 0374  
           fpl__setPwm 037C         ?a_getFunctions 0027  
    fpl__dummyFunction 0380               int_entry 0004  
              _handler 002B             _systemInit 02AC  
             saved_fsr 003E                _setFpwm 01EF  
              _setDuty 0243            save_btemp10 000F  
          save_btemp11 0011            save_btemp12 0013  
          save_btemp13 0015            save_btemp14 0015  
              code_ptr 0040            string_table 00CE  
          saved_pclath 003F                  pclath 000A  
          saved_status 003D               _i2cSetup 029D  
                status 0003                int_func 002B  
          _i2cTransfer 0023    ?a_DelayMs_interrupt 0026  
        _dummyFunction 0394           _getFunctions 036B  
         used_code_ptr 0001       _delayus_variable 0020  
           int_restore 00A5             used_btemp0 0001  
           used_btemp1 0001             used_btemp2 0001  
           used_btemp3 0001             used_btemp4 0001  
           used_btemp5 0001             used_btemp6 0001  
           used_btemp7 0001               ?a_DelayS 0026  
